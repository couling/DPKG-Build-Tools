#!/bin/bash

function calc_sums() {
	echo $1':' >> $archive/Release
	for section in "$archive"/*/
	do
		find $section -name 'Packages*' -exec $2 '{}' '+' \
			-o -name 'Release' -exec $2 '{}' '+' \
			-o -name 'Contents-*' -exec $2 '{}' '+' \
			| while read sum file
		do
			echo "" $sum "`printf '% 16d' \`ls -l $file | awk '{print $5}'\``" ${file#$archive/}
		done
	done >> "$archive"/Release
}

function generate_packages() {
	echo Building: ${arch}/Packages.gz
	dpkg-scanpackages -m "${arch}" >  "${arch}/Packages"
	arch_all="${arch%/*}/binary-all"
	if [ -d "$arch_all" ]
	then
		echo Including: "$arch_all"
		dpkg-scanpackages -m "$arch_all" >> "${arch}/Packages"
	else
		echo Warning: "$arch_all" does not exist
	fi
	gzip -9 < "${arch}/Packages" > "${arch}/Packages.gz"
}

function generate_contents() {
	(
	echo "FILE                                                    LOCATION"
	awk '/^Filename:/ {print $2}' "${arch}/Packages" | while read package
	do
		section=`dpkg-deb --field "$package" Section`
		package_name=`dpkg-deb --field "$package" Package`
		dpkg-deb --fsys-tarfile "$package" | tar -t | grep -v '/$' | while read file 
		do
			file="${file#./}"
			echo "${file}	    ${section}/${package_name}"
		done
	done | sort | uniq
	) | gzip -9 > "${arch%/*}/Contents-${arch##*/binary-}.gz"
}

cd $1 || exit 1

shift 1

for archive in "$@"
do 
	archive="dists/$archive"
	echo "Archive: `pwd`/$archive"

	for arch in "$archive"/*/*/
	do
		arch="${arch%/}"
		if [ "${arch##*/}" != binary-all ]
		then
			generate_packages
			generate_contents
		fi
	done

	cat "$archive/ReleaseHeader" > "$archive/Release" || exit 1
	echo "Date: `date -u '+%a, %d %b %Y %T %Z'`" >> "$archive/Release"
	echo Architectures: `for file in "$archive"/*/*/ ; do file="${file#$archive/*/}" ; echo ${file%*/} ; done | 
		sort -u` >> $archive/Release
	echo Components: `for file in "$archive"/*/ ; do echo ${file%/} ; done` >> $archive/Release

	calc_sums MD5Sum md5sum
	calc_sums SHA1   shasum
	calc_sums SHA256 'shasum -a 256'

    [ -f "$archive"/Release.gpg ] && rm "$archive"/Release.gpg
    [ -f "$archive"/InRelease   ] && rm "$archive"/InRelease
    gpg --output "$archive"/Release.gpg -ba "$archive"/Release
    gpg --output "$archive"/InRelease --clearsign "$archive"/Release

done
